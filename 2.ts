// #2: Избегайте оберточных типов
// В JavaScript кроме обьектов, есть еще 7 примитивов
// В Примитиве в отличие от обьекта отсутствуют методы и они неизменяемы

// Когда мы видим, что-то такое - то мы можем сказать,
// что примитив оборачивается в обьект типа String, в котором уже куча своих внутернных методов
'primitiv'.charAt(3)

// Есть еще пара неприятных моментов, таких как: 
console.log("hello" === new String("hello")) // false
console.log(new String("hello") === new String("hello")) //false

// Неявное преобразоване в оберточные типы обьектов обьясняет странный феномен JS 
//   : при назначении свойства примитиву, оно исчезает
// При выполнении значения будут примитивами, а не обьектами
const x : String = "hello";
const y : Number = 2022;
const z : Boolean = false; 
// Но все равно обозначать лучше с маленькой буквы,
// для того чтобы не возникало путаницы между примитивами и обектами, хоть TS такой код и пропускает
console.log(typeof(x))
console.log(typeof(y))
console.log(typeof(z))


// Friendly reminder
// Используйте примитивные, а не оберточные типы. string вместо String, number вместо Number и т.д
